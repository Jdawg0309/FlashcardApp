"""Plaintext passwords (no hashing)

Revision ID: 0e4d4c506b57
Revises: 
Create Date: 2025-06-05 04:38:37.087641

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '0e4d4c506b57'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('card_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('fk_cardtags_card_id'))
        batch_op.drop_index(batch_op.f('fk_cardtags_tag_id'))
        batch_op.drop_constraint(batch_op.f('fk_cardtags_card'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_cardtags_tag'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'cards', ['card_id'], ['id'])
        batch_op.create_foreign_key(None, 'tags', ['tag_id'], ['id'])

    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('fk_cards_deck_id'))
        batch_op.drop_index(batch_op.f('ft_idx_cards_front_back'), mysql_prefix='FULLTEXT')
        batch_op.drop_constraint(batch_op.f('fk_cards_deck'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'decks', ['deck_id'], ['id'])

    with op.batch_alter_table('decks', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('fk_decks_user_id'))
        batch_op.drop_constraint(batch_op.f('fk_decks_user'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('review_logs', schema=None) as batch_op:
        batch_op.alter_column('review_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('fk_reviewlogs_card_id'))
        batch_op.drop_constraint(batch_op.f('fk_reviewlogs_card'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'cards', ['card_id'], ['id'])

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('uq_tags_name'))
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(length=128), nullable=False))
        batch_op.drop_index(batch_op.f('uq_users_email'))
        batch_op.drop_index(batch_op.f('uq_users_username'))
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=128), nullable=False))
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_index(batch_op.f('uq_users_username'), ['username'], unique=True)
        batch_op.create_index(batch_op.f('uq_users_email'), ['email'], unique=True)
        batch_op.drop_column('password')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_name'))
        batch_op.create_index(batch_op.f('uq_tags_name'), ['name'], unique=True)

    with op.batch_alter_table('review_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_reviewlogs_card'), 'cards', ['card_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index(batch_op.f('fk_reviewlogs_card_id'), ['card_id'], unique=False)
        batch_op.alter_column('review_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('decks', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_decks_user'), 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index(batch_op.f('fk_decks_user_id'), ['user_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_cards_deck'), 'decks', ['deck_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index(batch_op.f('ft_idx_cards_front_back'), ['front', 'back'], unique=False, mysql_prefix='FULLTEXT')
        batch_op.create_index(batch_op.f('fk_cards_deck_id'), ['deck_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('card_tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_cardtags_tag'), 'tags', ['tag_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_cardtags_card'), 'cards', ['card_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index(batch_op.f('fk_cardtags_tag_id'), ['tag_id'], unique=False)
        batch_op.create_index(batch_op.f('fk_cardtags_card_id'), ['card_id'], unique=False)

    # ### end Alembic commands ###
